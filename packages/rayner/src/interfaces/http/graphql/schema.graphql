enum UserRole {
  UNKNOWN
  OPERATOR
  ADMIN
}

enum MacrosType {
  LIGHTING
}

enum ControlType {
  SWITCH
  ILLUMINATION
}

directive @auth(requires: [UserRole!]!) on OBJECT | FIELD_DEFINITION

scalar Upload

type DefaultOutput {
  message: String
}

type Error {
  code: Int!
  message: String!
}

input PaginationInput {
  page: Int = 1
  limit: Int = 25
}

type PaginationOutput {
  total: Int!
  page: Int!
  limit: Int!
}

input TitleInput {
  ru: String!
  en: String!
}

type TitleOutput {
  ru: String!
  en: String!
}

input MarkupInput {
  title: TitleInput!
  description: String!
  order: Int!
  color: String!
}

type MarkupOutput {
  title: TitleOutput!
  description: String!
  order: Int!
  color: String!
}

type Control {
  id: ID!

  title: TitleOutput!
  order: Int!
  readonly: Boolean!
  type: ControlType!
  units: String!
  max: Float!
  min: Float!
  precision: Float!
  value: String!
  topic: String
  error: String!
  meta: String!

  markup: MarkupOutput!
  labels: [String!]
}

type Device {
  id: ID!

  driver: String!
  title: TitleOutput!

  error: String!
  meta: String!

  markup: MarkupOutput!
  labels: [String!]

  controls: [Control!]
}

type Macros {
  id: ID!

  name: String!
  description: String!
  type: MacrosType!
  labels: [String!]

  settings: String!

  createdAt: String!
  updatedAt: String!
}

type MacrosWireframe {
  type: ID!

  name: String!
  description: String!

  settings: String!
}

input MarkupDeviceInput {
  deviceId: ID!
  markup: MarkupInput!
  labels: [String!]
}

input MarkupDeviceControlInput {
  deviceId: ID!
  controlId: ID!
  markup: MarkupInput!
  labels: [String!]
}

input SetControlValueInput {
  deviceId: String!
  constrolId: String!
  value: String!
}

type Query {
  getMacrosWireframes: [MacrosWireframe!]!
}

type Mutation {
  markupDevice(input: MarkupDeviceInput!): DefaultOutput
  markupDeviceControl(input: MarkupDeviceControlInput!): DefaultOutput
  setControlValue(input: SetControlValueInput!): DefaultOutput
}

type Subscription {
  device: [Device!]!
  macros: [Macros!]!
}
