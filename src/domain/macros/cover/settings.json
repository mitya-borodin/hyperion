{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/CoverMacrosSettings",
  "definitions": {
    "CoverMacrosSettings": {
      "type": "object",
      "properties": {
        "switchers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string"
              },
              "controlId": {
                "type": "string"
              },
              "controlType": {
                "type": "string",
                "const": "switch"
              },
              "type": {
                "$ref": "#/definitions/SwitchType"
              },
              "trigger": {
                "$ref": "#/definitions/Trigger"
              },
              "blockMin": {
                "type": "number",
                "description": "Позволяет заблокировать все автоматические действия на заданное время для каждой кнопки.\n\nЗначение задается в минутах.\n\nЕсли указать 0 минут, то блокировка не включится."
              },
              "illumination": {
                "type": "number",
                "description": "Уровень освещенности выше которого случится открывание шторы.\n\nЕсли указать значение меньше 0 (например -1), то освещенность учитываться не будет, и переключатель будет каждый раз открывать штору.\n\nЕсли значение -1 и переключатель типа SwitchType.SEALED_CONTACT, перед открытием будут проверены условия блокировок открывания.\n\nЕсли указать большое значение больше 10000, то данный переключатель никогда не откроет штору, так как значение освещенности никогда не будет достигнуто."
              },
              "everyOn": {
                "type": "boolean",
                "description": "Позволяет до-открыть/закрыть все шторы.\n\nЕсли true, и в списке штор есть открытые и закрытые шторы, произойдет закрытие открытых штор.\n\nЕсли false, и в списке штор есть открытые и закрытые шторы, произойдет открытие закрытых штор.\n\nЕсли в списке все шторы в одном состоянии, то произойдет инверсия состояния."
              }
            },
            "required": [
              "deviceId",
              "controlId",
              "controlType",
              "type",
              "trigger",
              "blockMin",
              "illumination",
              "everyOn"
            ],
            "additionalProperties": false
          },
          "description": "Включает в себя все типы переключателей, кнопки,  виртуальные кнопки, герконы."
        },
        "illuminations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string"
              },
              "controlId": {
                "type": "string"
              },
              "controlType": {
                "type": "string",
                "const": "lux"
              }
            },
            "required": ["deviceId", "controlId", "controlType"],
            "additionalProperties": false
          }
        },
        "motions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string"
              },
              "controlId": {
                "type": "string"
              },
              "controlType": {
                "type": "string",
                "const": "value"
              }
            },
            "required": ["deviceId", "controlId", "controlType"],
            "additionalProperties": false
          }
        },
        "noises": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string"
              },
              "controlId": {
                "type": "string"
              },
              "controlType": {
                "type": "string",
                "const": "sound_level"
              }
            },
            "required": ["deviceId", "controlId", "controlType"],
            "additionalProperties": false
          }
        },
        "temperatures": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string"
              },
              "controlId": {
                "type": "string"
              },
              "controlType": {
                "type": "string",
                "const": "temperature"
              }
            },
            "required": ["deviceId", "controlId", "controlType"],
            "additionalProperties": false
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string"
              },
              "controlId": {
                "type": "string"
              },
              "controlType": {
                "type": "string",
                "const": "enum"
              },
              "open": {
                "type": "string",
                "description": "Выбирается пользователем из enum который предоставляет устройство."
              },
              "close": {
                "type": "string",
                "description": "Выбирается пользователем из enum который предоставляет устройство."
              },
              "stop": {
                "type": "string",
                "description": "Выбирается пользователем из enum который предоставляет устройство."
              }
            },
            "required": ["deviceId", "controlId", "controlType", "open", "close", "stop"],
            "additionalProperties": false
          },
          "description": "Контрол переключения состояния шторы."
        },
        "positions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string"
              },
              "controlId": {
                "type": "string"
              },
              "controlType": {
                "type": "string",
                "const": "value"
              },
              "open": {
                "type": "number",
                "description": "Значение при полностью открытом положении"
              },
              "close": {
                "type": "number",
                "description": "Значение при полностью закрытом положении"
              }
            },
            "required": ["deviceId", "controlId", "controlType", "open", "close"],
            "additionalProperties": false
          },
          "description": "Контрол позволяет увидеть положение шторы после окончания движения, и задать то положение в которое должна прийти штора."
        },
        "illumination": {
          "type": "object",
          "properties": {
            "detection": {
              "$ref": "#/definitions/LevelDetection"
            },
            "switchingBoundaries": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 2
              },
              "description": "Диапазоны освещенности для закрывания и открывания шторы.\n\nПорог задается кортежем [CLOSE, OPEN], можно задать несколько пороговых значений [[25, 150], [3000, 200], [300, 500]].\n\nЕсли значение CLOSE < OPEN, то при освещении меньше (<) CLOSE штора будет закрываться, а при значении больше (>) OPEN будет открываться.\n\nЕсли значение CLOSE > OPEN, то при освещении больше (>) CLOSE штора будет закрываться, а при значении меньше (<) OPEN будет открываться.\n\nПриоритет отдается закрытию. Проверяются все диапазоны, и если в каком либо есть закрытие, то случится оно.\n\nНапример:\n- Потемнело и в связи с этим стоит закрыть шторы, чтобы с улицы не было видно происходящего внутри [ при 25 закрыть, при 150 открыть], а как только солнце взойдет и освещение при закрытой шторе станет выше уставки, можно пытаться открыть штору.\n\n- Солнце взошло или тучи рассеялись после сумерек, стоит открыть шторы для инсоляции помещения [ закрыть при 100 при открытой шторе, открыть при 150 при закрытой шторе].\n\n- Солнце слишком яркое и/или светит на монитор, стоит закрыть окно, и как только освещение упадет до нужного порога открыть штору [закрыть при 3000 при открытой шторе, открыть при 300 при закрытой шторе ]."
            },
            "blockTheOpenWhileFullSilent": {
              "type": "boolean",
              "description": "Если true, то при полной тишине операция OPEN будет заблокирована до нарушения тишины."
            }
          },
          "required": ["detection", "switchingBoundaries", "blockTheOpenWhileFullSilent"],
          "additionalProperties": false
        },
        "motion": {
          "type": "object",
          "properties": {
            "detection": {
              "$ref": "#/definitions/LevelDetection"
            },
            "trigger": {
              "type": "number",
              "description": "Задает чувствительность к движению."
            },
            "illumination": {
              "type": "number",
              "description": "Значение освещенности, превышение которого позволяет открывать штору при появлении движения."
            }
          },
          "required": ["detection", "trigger", "illumination"],
          "additionalProperties": false
        },
        "noise": {
          "type": "object",
          "properties": {
            "detection": {
              "$ref": "#/definitions/LevelDetection"
            },
            "trigger": {
              "type": "number",
              "description": "Задает чувствительность к шуму."
            },
            "illumination": {
              "type": "number",
              "description": "Значение освещенности, превышение которого позволяет открывать штору при появлении шума."
            }
          },
          "required": ["detection", "trigger", "illumination"],
          "additionalProperties": false
        },
        "temperature": {
          "type": "object",
          "properties": {
            "detection": {
              "$ref": "#/definitions/LevelDetection"
            }
          },
          "required": ["detection"],
          "additionalProperties": false
        },
        "silenceMin": {
          "type": "number",
          "description": "Определение полной тишины.\n\nЗначение задается в минутах.\n\nЕсли > 0, то в случае отсутствия шума и движения группа будет активен фактор закрытия по движению и шуму.\n\nЕсли указать <= 0, то фактор закрывания по шуму и движению отключается."
        },
        "openCloseByTime": {
          "type": "object",
          "properties": {
            "direction": {
              "$ref": "#/definitions/OpenCloseByTimeDirection"
            },
            "blockMin": {
              "type": "number"
            },
            "timePointMin": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          "required": ["direction", "blockMin", "timePointMin"],
          "additionalProperties": false,
          "description": "Автоматическое открытие/закрытие шторы, по заданному часу в сутках."
        },
        "block": {
          "type": "array",
          "minItems": 3,
          "items": [
            {
              "$ref": "#/definitions/BlockType"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 3,
          "description": "Блокировка автоматических действий."
        },
        "closeBySun": {
          "type": "object",
          "properties": {
            "illumination": {
              "type": "number",
              "description": "Если освещенность выше заданного порога, то активируется закрытие/открытие шторы по солнцу."
            },
            "temperature": {
              "type": "number",
              "description": "Если температура превысила уставку и установилась полная тишина, то штора закрывается до указанного положения."
            },
            "silenceMin": {
              "type": "number",
              "description": "Определение полной тишины.\n\nЗначение задается в минутах.\n\nЕсли > 0, то в случае отсутствия шума и движения группа будет активен фактор закрытия по движению и шуму.\n\nЕсли указать <= 0, то фактор закрывания по шуму и движению отключается."
            },
            "position": {
              "type": "number"
            }
          },
          "required": ["illumination", "temperature", "silenceMin", "position"],
          "additionalProperties": false,
          "description": "Автоматическое закрытие шторы, по высокой солнечной активности."
        }
      },
      "required": [
        "switchers",
        "illuminations",
        "motions",
        "noises",
        "temperatures",
        "states",
        "positions",
        "illumination",
        "motion",
        "noise",
        "temperature",
        "silenceMin",
        "openCloseByTime",
        "block",
        "closeBySun"
      ],
      "additionalProperties": false,
      "description": "! Cover macros scenarios\n\nВ описание роль крышки будет играть штора, но вместо шторы могут быть любые другие  устройства типа Cover https://www.zigbee2mqtt.io/guide/usage/exposes.html#specific\n\nШторы управляются при помощи:  Кнопок  Виртуальная кнопка (дает возможность управлять через приложение)  Герконов  Освещенности  Движения  Шума  Температуре  Времени\n\n* 1. Открыть/Закрыть/Остановить через кнопку либо через реальную либо через виртуальную. Классический способ переключать состояние шторы, при котором нужно нажимать на кнопку.\n\nСпособ является приоритетным над всеми остальными, и может выставлять блокировку на изменения  состояния, на заданное время.\n\nТо есть в случае открывания/закрывания кнопкой, штора в любом случае изменит состояние,  и автоматические действия будут заблокированы на время указанное в настройках.\n\nЧтобы реализовать функциональность открыть/закрыть все шторы, нужно сделать экземпляр  макроса, куда добавить одну виртуальную кнопу и все шторы.\n\nНажимая на неё через приложение, все шторы будут получать команды.\n\n* 2. Открыть по геркону Позволяет начать открывать шторы при отрывании двери, окна, и других открывающихся конструкций.\n\nМожет работать совместно с датчиком освещенности, и при превышении указанной освещенности начинать открывать штору в момент срабатывания геркона.\n\nНапример в случае открывания двери в котельную, в которой весит штора, открываем дверь, и ждем пока откроется штора. Например утром (освещение выше уставки) при выходе из любой комнаты начинают открываться прихожая и гостиная. Нужно понимать, что при каждом открывании двери будут срабатывать этот сценарий, пытающийся открыть шторы, но его могут блокировать другие условия.\n\n* 3. Открыть/Закрыть по освещенности Позволяет указать пороги освещенности после которых нужно изменить состояние шторы.\n\nПорог задается кортежем [CLOSE, OPEN], можно задать несколько пороговых значений [[25, 150], [3000, 300]].\n\nЕсли значение CLOSE < OPEN, то при освещении меньше (<) CLOSE штора будет закрываться, а при значении больше (>) OPEN будет открываться.\n\nЕсли значение CLOSE > OPEN, то при освещении больше (>) CLOSE штора будет закрываться, а при значении меньше (<) OPEN будет открываться.\n\nНужно понимать, то, что когда штора закрыта, сила солнечного освещения сильно меньше, и при пусконаладке нужно определить какое освещение при закрытой шторе будет подходящим для изменения состояния.\n\nПуска наладку сложно сделать непосредственно в день окончания монтажа, по этому пользователю будет выдана инструкция    о том как регулировать значения освещенности.\n\nПриоритет отдается закрытию, проверяются все диапазоны, и если в каком либо есть закрытие, то случится оно.\n\nНапример:\n- Потемнело и в связи с этим стоит закрыть шторы, чтобы с улицы не было видно происходящего внутри   [ при 25 закрыть, при 150 открыть], а как только солнце взойдет и освещение при закрытой шторе   станет выше уставки, можно пытаться открыть штору.\n- Солнце взошло или тучи рассеялись после сумерек, стоит открыть шторы для инсоляции помещения   [ закрыть при 100 при открытой шторе, открыть при 150 при закрытой шторе].\n- Солнце слишком яркое и/или светит на монитор, стоит закрыть окно, и как только освещение упадет   до нужного порога открыть штору [закрыть при 3000 при открытой шторе, открыть при 300 при закрытой шторе ].\n\n* 4. Открывание/Закрывание по датчику движения и/или шуму.  Дополняет изменение состояние шторы по освещенности, позволяет не открывать шторы,  пока не появится движение и/или шум, даже когда освещение достаточно для открывания.\n\n Позволяет при достаточном освещении открыть шторы в нужных места при появлении движения  либо шума на указанных датчиках, свыше указанных значений.\n\n* 5. Открыть/Закрыть по времени Второй по приоритетности переключатель состояния после ручного нажатия на кнопку.\n\nПозволяет указать в какой час нужно изменить состояние шторы.\n\nМожно задать по действию на каждый час.\n\n{   direction: \"OPEN\",   blockMin: 2 * 60,   mins: [1 * 60,4 * 60,6 * 60,8 * 60] } Штора будет пытаться открыться в час ночи, в 4, 6, 8 утра причем после каждой попытки будут блокироваться автоматические действия на заданное время.\n\n{  direction: \"CLOSE\",  blockMin: 8 * 60,  mins: [18 * 60,20 * 60,0 * 60] } Штора будет пытаться закрыться в 18, 20, 0, часов причем после каждой попытки будут блокироваться автоматические действия на заданное время.\n\nПри пересечении времени, приоритет будет отдан операции CLOSE.\n\n* 6. Блокировка действий по времени Позволяет заблокировать изменение состояния шторы в заданном временном диапазоне.\n\nВозможно указать какое именно действие блокировать, [[OPEN, 23, 9], [CLOSE, 11,16], [ANY, 21-22]].\n\nЭто полезно когда нужно приостановить выполнение автоматических функций.\n\nВ случае когда мы не хотим открывать штору с ночи до определенно времени дня например гарантированно до 10 дня, мы зададим [[OPEN, 0, 10]]. В случае когда мы гарантированно не хотим закрывать шторы в середине дня, мы зададим [[CLOSE, 11,16]]. В случае когда мы хотим запретить все автоматические действия, скажем перед сном [[ANY, 20,23]].\n\nВ результате мы получим настройку [[OPEN, 0, 10], [CLOSE, 10,16], [ALL, 20,23]].\n\nНужно понимать, что это специализированная настройка и за частую управление шторами будет происходит по освещенности + движение и шум.\n\n* 7. Закрыть по солнечной активности или освещенности движению, шуму и температуре В солнечные дни в комнату может проникать слишком много тепла от солнца и эта автоматизация даст возможность прикрыть штору, если в помещении выросла температура при высокой освещенности.\n\nПозволяет закрыть штору если освещенность выше установленного порога, установилась полная тишина ни движения ни шума дольше заданного промежутка скажем 1 час, температура выше заданной уставки.\n\nПозволяет закрыть штору не полностью, а прикрыть на нужную величину."
    },
    "SwitchType": {
      "type": "string",
      "enum": ["BUTTON", "V_BUTTON", "SEALED_CONTACT"],
      "description": "Тип переключателя (кнопка, виртуальная кнопка, геркон). От типа зависит приоритет у кнопки максимальный приоритет, так же и у виртуальной кнопки, после идет геркон."
    },
    "Trigger": {
      "type": "string",
      "enum": ["UP", "DOWN"],
      "description": "Определяет по верхнему (\"1\", +5, true) или по нижнему (\"0\", 0, false) уровню случится реакция. Значение по умолчанию DOWN."
    },
    "LevelDetection": {
      "type": "string",
      "enum": ["MAX", "MIN", "AVG"],
      "description": "Правило определения числового значения по нескольким датчикам MAX - берем максимальное среди всех MIN - берем минимальное среди всех AVG - берем среднее среди всех"
    },
    "OpenCloseByTimeDirection": {
      "type": "string",
      "enum": ["OPEN", "CLOSE"],
      "description": "Направление движения крышки."
    },
    "BlockType": {
      "type": "string",
      "enum": ["OPEN", "CLOSE", "ALL"],
      "description": "Типы блокировок."
    }
  }
}
