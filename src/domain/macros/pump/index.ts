/* eslint-disable @typescript-eslint/ban-types */
/* eslint-disable unicorn/no-empty-file */
import debug from 'debug';
import cloneDeep from 'lodash.clonedeep';
import defaultsDeep from 'lodash.defaultsdeep';

import { stringify } from '../../../helpers/json-stringify';
import { ControlType } from '../../control-type';
import { Macros, MacrosParameters } from '../macros';
import { MacrosType } from '../showcase';

const logger = debug('hyperion:macros:pump');

/**
 * –ù–∞—Å–æ—Å —Ö–æ–ª–æ–¥–Ω–æ–≥–æ –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è, —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –ø—Ä–æ—Ç–µ—á–µ–∫.
 *
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–æ—Ä–æ–º –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø–∏—Ç–∞–Ω–∏–µ –Ω–∞—Å–æ—Å–∞
 * (–ª–∏–±–æ —Å–∞–º–æ–≥–æ –Ω–∞—Å–æ—Å–∞, –ª–∏–±–æ —á–∞—Å—Ç–æ—Ç–Ω–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—è) –≤ —Å–ª—É—á–∞–µ –ø—Ä–æ—Ç–µ—á–∫–∏.
 *
 * –ù–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ—Ä —Ç–∞–∫ –∂–µ –≤–µ—à–∞–µ—Ç—Å—è –ø–∏—Ç–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ (–∫–∞–±–∏–Ω–µ—Ç, –∫–æ–ª–æ–Ω–Ω—ã), —á—Ç–æ–±—ã
 * –æ–Ω–∏ –Ω–µ —Å—á–∏—Ç–∞–ª–∏ –≤—Ä–µ–º—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–π —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.
 *
 * –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ù–û (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –æ—Ç–∫—Ä—ã—Ç—ã–π) –∫–æ–Ω—Ç–∞–∫—Ç–æ—Ä,
 * —á—Ç–æ–±—ã –ø—Ä–∏ –ø—Ä–æ–ø–∞–¥–∞–Ω–∏–∏ –ø–∏—Ç–∞–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ—Ä –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–æ—Å—å –≤ –æ—Ç–∫—Ä—ã—Ç–æ–µ
 * –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—ã–∫–ª—é—á–∏–ª –Ω–∞—Å–æ—Å.
 */

/**
 * ! SETTINGS
 */

export enum DeviceState {
  ON = 'ON',
  OFF = 'OFF',
}

export type PumpMacrosSettings = {
  readonly deviceId: string;
  readonly controlId: string;
  readonly controlType: ControlType.SWITCH;

  /**
   * –î–∞—Ç—á–∏–∫–∏ –ø—Ä–æ—Ç–µ—á–∫–∏.
   *
   * –°–≤—è–∑—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –Ω–∞—Å–æ—Å–∞ —Å –≥—Ä—É–ø–ø–æ–π –¥–∞—Ç—á–∏–∫–æ–≤ –ø—Ä–æ—Ç–µ—á–∫–∏, –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, —Ç–æ –Ω–∞—Å–æ—Å –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è.
   */
  readonly leaks: Array<{
    readonly deviceId: string;
    readonly controlId: string;
    readonly controlType: ControlType.SWITCH;
  }>;
};

/**
 * ! STATE
 */

/**
 * –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞–∫—Ä–æ—Å–∞ –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
 */
export type PumpMacrosPublicState = {};

/**
 * –í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞–∫—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
 * –û–Ω–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –º–∞–∫—Ä–æ—Å–∞.
 */
export type PumpMacrosPrivateState = {
  pump: DeviceState;
  leak: boolean;
};

type PumpMacrosState = PumpMacrosPublicState & PumpMacrosPrivateState;

const defaultState: PumpMacrosState = {
  leak: false,
  pump: DeviceState.OFF,
};

const createDefaultState = () => cloneDeep(defaultState);

/**
 * ! OUTPUT
 */
type PumpMacrosNextOutput = {
  pump?: {
    readonly deviceId: string;
    readonly controlId: string;
    readonly value: string;
  };
};

/**
 * –í–µ—Ä—Å–∏—è –º–∞–∫—Ä–æ—Å–∞, –∫ –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ —Å—Ö–µ–º–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫, —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –∏—Ö –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ,
 *  —Ç–∞–∫ –∂–µ –∫ —Å—Ö–µ–º–µ –ø—Ä–∏–≤—è–∑–∞–Ω—ã –º–∏–≥—Ä–∞—Ü–∏–∏ —Å—Ö–µ–º –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ.
 */
const VERSION = 0;

/**
 * ! CONSTRUCTOR PARAMS
 */
type PumpMacrosParameters = MacrosParameters<string, string | undefined>;

export class PumpMacros extends Macros<MacrosType.PUMP, PumpMacrosSettings, PumpMacrosState> {
  private nextOutput: PumpMacrosNextOutput;

  constructor(parameters: PumpMacrosParameters) {
    const settings = PumpMacros.parseSettings(parameters.settings, parameters.version);
    const state = PumpMacros.parseState(parameters.state);

    super({
      /**
       * –í–µ—Ä—Å–∏—è —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞–∫—Ä–æ—Å–∞
       */
      version: VERSION,

      macrosRepository: parameters.macrosRepository,
      eventBus: parameters.eventBus,

      type: MacrosType.PUMP,

      id: parameters.id,

      name: parameters.name,
      description: parameters.description,
      labels: parameters.labels,

      settings,

      state: defaultsDeep(state, createDefaultState()),

      devices: parameters.devices,
      controls: parameters.controls,
    });

    this.nextOutput = {
      pump: undefined,
    };
  }

  static parseSettings = (settings: string, version: number = VERSION): PumpMacrosSettings => {
    return Macros.migrate(settings, version, VERSION, [], 'settings');
  };

  static parseState = (state?: string, version: number = VERSION): PumpMacrosState => {
    if (!state) {
      return createDefaultState();
    }

    return Macros.migrate(state, version, VERSION, [], 'state');
  };

  static parsePublicState = (state?: string, version: number = VERSION): PumpMacrosPublicState => {
    if (!state) {
      return createDefaultState();
    }

    return Macros.migrate(state, version, VERSION, [], 'state');
  };

  setState = (nextPublicState: string): void => {};

  protected collecting() {}

  protected priorityComputation = () => {
    return false;
  };

  protected actionBasedComputing = (): boolean => {
    return false;
  };
  protected sensorBasedComputing = (): boolean => {
    return false;
  };

  protected computeOutput = () => {
    const nextOutput: PumpMacrosNextOutput = {
      pump: undefined,
    };

    this.nextOutput = nextOutput;

    logger('The next output was computed ‚è≠Ô∏è üçã');
    logger(
      stringify({
        name: this.name,
        nextState: this.state,
        nextOutput: this.nextOutput,
      }),
    );
  };

  protected send = () => {};

  protected destroy() {}

  /**
   * ! INTERNAL_IMPLEMENTATION
   */
}
