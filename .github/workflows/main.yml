name: CI
on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4
      - name: Install Nodejs
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: 'Install Yarn'
        run: 'npm i -g yarn'
      - name: 'Install deps'
        run: 'yarn'
      - name: 'Check prettier'
        run: 'yarn prettier:check'
      - name: 'Check eslint'
        run: 'yarn eslint:check'

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: 'Run test'
        run: 'echo add test in future'

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: borodindmitriy/hyperion:${{ github.sha }}
          cache-from: type=registry,ref=borodindmitriy/hyperion:${{ github.sha }}
          cache-to: type=inline

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4
      - name: Run command on remote server
        uses: D3rHase/ssh-command-action@v0.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USER }}
          private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          host_fingerprint: ${{ secrets.HOST_FINGERPRINT }}
          command: |
            docker info;
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }};
            cd ${{ secrets.PROJECT_FOLDER }};
            git checkout master;
            docker-compose down;
            git pull;
            GITHUB_SHA=${{ github.sha }} && docker-compose up -d;
            docker system prune --all --force;
